import unittest
from TestUtils import TestChecker
from StaticError import *
from AST import *

class CheckSuite(unittest.TestCase):
    def test_401(self):
        """Created automatically"""
        input = r"""Function: main 
                    Body:
                        printStrLn(read(4));
                    EndBody."""
        expect = str()
        self.assertTrue(TestChecker.test(input,expect,401))
        
    def test_402(self):
        """Created automatically"""
        input = Program([FuncDecl(Id("main"),[],([],[CallStmt(Id("printStrLn"),[CallExpr(Id("read"),[IntLiteral(4)])])]))])
        expect = str()
        self.assertTrue(TestChecker.test(input,expect,402))
        
    def test_403(self):
        """Created automatically"""
        input = r"""Function: main  
                   Body:
                        printStrLn();
                    EndBody."""
        expect = str()
        self.assertTrue(TestChecker.test(input,expect,403))
        
    def test_404(self):
        """Created automatically"""
        input = Program([FuncDecl(Id("main"),[],([],[CallStmt(Id("printStrLn"),[])]))])
        expect = str()
        self.assertTrue(TestChecker.test(input,expect,404))
        
    def test_405(self):
        """Created automatically"""
        input = r"""Function: main
                   Body: 
                        foo();
                   EndBody."""
        expect = str()
        self.assertTrue(TestChecker.test(input,expect,405))
        
    def test_406(self):
        """Created automatically"""
        input = Program([FuncDecl(Id("main"),[],([],[CallExpr(Id("foo"),[])]))])
        expect = str()
        self.assertTrue(TestChecker.test(input,expect,406))
        